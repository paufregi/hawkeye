groups:
- name: verify
  jobs:
  - verify-scala
  - verify-python
- name: deployment
  jobs:
  - bump-version
  - build-jar
  - build-image
  - deploy-uat
  - deploy-prod
  - deploy-prod-us
  - deploy-prod-eu
resources:
- name: hawkeye-repo
  type: git
  source:
    private_key: ((github-private-key))
    uri: git@github.com:paufregi/hawkeye.git
- name: pull-request-scala
  type: pull-request
  source:
    access_token: ((github-access-token))
    every: true
    paths:
    - archery/arrow/*
    - project/*
    - build.sbt
    private_key: ((github-private-key))
    repo: paufregi/hawkeye
- name: pull-request-python
  type: pull-request
  source:
    access_token: ((github-access-token))
    every: true
    paths:
    - archery/bow/*
    private_key: ((github-private-key))
    repo: paufregi/hawkeye
- name: version
  type: semver
  source:
    access_key_id: ((aws-access-key-id))
    bucket: mm-shark
    initial_version: 0.0.0
    key: hawkeye/versions/archery
    region_name: us-east-1
    secret_access_key: ((aws-secret-access-key))
- name: concourse-tasks
  type: git
  source:
    private_key: ((github-private-key))
    uri: git@github.com:movio/concourse-tasks.git
- name: jar-artifact
  type: s3
  source:
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    bucket: mm-shark
    region_name: us-east-1
    regexp: hawkeye/artifacts/arrow/arrow-(\d+\.\d+\.\d+)
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
jobs:
- name: verify-scala
  plan:
  - get: pull-request-scala
    trigger: true
    version: every
  - put: pull-request-scala
    params:
      context: archery/scala
      path: pull-request-scala
      status: pending
  - aggregate:
    - task: sbt-test
      file: pull-request-scala/ci/tasks/sbt/test.yml
      params:
        PROJECT: arrow
      input_mapping:
        repo: pull-request-scala
    - task: sbt-it-test
      file: pull-request-scala/ci/tasks/sbt/it-test.yml
      params:
        PROJECT: arrow
      input_mapping:
        repo: pull-request-scala
  on_failure:
    put: pull-request-scala
    params:
      context: archery/scala
      path: pull-request-scala
      status: failure
  on_success:
    put: pull-request-scala
    params:
      context: archery/scala
      path: pull-request-scala
      status: success
- name: verify-python
  plan:
  - get: pull-request-python
    trigger: true
    version: every
  - put: pull-request-python
    params:
      context: archery/python
      path: pull-request-python
      status: pending
  - task: pytest
    file: pull-request-python/ci/tasks/python/test.yml
    params:
      SRC_PATH: archery/bow
    input_mapping:
      repo: pull-request-python
  on_failure:
    put: pull-request-python
    params:
      context: archery/python
      path: pull-request-python
      status: failure
  on_success:
    put: pull-request-python
    params:
      context: archery/python
      path: pull-request-python
      status: success
- name: bump-version
  serial: true
  plan:
  - aggregate:
    - get: hawkeye-repo
    - get: version
    - get: concourse-tasks
  - task: bump-version
    file: concourse-tasks/version/tasks/bump-version.yaml
    params:
      VERSION_PATH: archery/version
    input_mapping:
      repo: hawkeye-repo
      tasks: concourse-tasks
  - put: version
    params:
      file: new-version/version
- name: build-jar
  serial: true
  plan:
  - aggregate:
    - get: hawkeye-repo
      passed:
      - bump-version
    - get: version
      trigger: true
      passed:
      - bump-version
  - task: sbt-assembly
    file: hawkeye-repo/ci/tasks/sbt/assembly.yml
    params:
      PROJECT: arrow
    input_mapping:
      repo: hawkeye-repo
  - put: jar-artifact
    params:
      file: artifact/arrow-*
- name: build-image
  serial: true
  plan:
  - aggregate:
    - get: hawkeye-repo
      passed:
      - bump-version
    - get: version
      trigger: true
      passed:
      - bump-version
  - task: prepare-docker
    file: hawkeye-repo/archery/ci/tasks/prepare-docker.yml
    params:
      DOCKERFILE_PATH: archery/bow/docker/Dockerfile
      SRC_PATH: archery/bow
    input_mapping:
      repo: hawkeye-repo
- name: deploy-uat
  serial: true
  plan:
  - aggregate:
    - get: hawkeye-repo
      passed:
      - build-jar
      - build-image
    - get: version
      trigger: true
      passed:
      - build-jar
      - build-image
  - task: deploy
    file: hawkeye-repo/archery/ci/tasks/deploy.yml
    params:
      ENV: uat
    input_mapping:
      repo: hawkeye-repo
- name: deploy-prod
  serial: true
  plan:
  - aggregate:
    - get: hawkeye-repo
      passed:
      - deploy-uat
    - get: version
      passed:
      - deploy-uat
- name: deploy-prod-us
  serial: true
  plan:
  - aggregate:
    - get: hawkeye-repo
      passed:
      - deploy-prod
    - get: version
      trigger: true
      passed:
      - deploy-prod
  - task: deploy
    file: hawkeye-repo/archery/ci/tasks/deploy.yml
    params:
      ENV: prod-us
    input_mapping:
      repo: hawkeye-repo
- name: deploy-prod-eu
  serial: true
  plan:
  - aggregate:
    - get: hawkeye-repo
      passed:
      - deploy-prod
    - get: version
      trigger: true
      passed:
      - deploy-prod
  - task: deploy
    file: hawkeye-repo/archery/ci/tasks/deploy.yml
    params:
      ENV: prod-eu
    input_mapping:
      repo: hawkeye-repo
